kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv-volume-elastic-data
  namespace: ns-elastic
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 200Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/docker/data/es/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pv-claim-elastic-data
  namespace: ns-elastic
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: ns-elastic
  name: elasticsearch-data
  labels:
    app: elasticsearch
    role: data
spec:
  serviceName: elasticsearch-data
  replicas: 3
  selector:
    matchLabels:
      app: elasticsearch
      role: data
  template:
    metadata:
      labels:
        app: elasticsearch
        role: data
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: role
                  operator: In
                  values:
                  - data
              topologyKey: kubernetes.io/hostname
      volumes:
       - name: pv-storage-elastic-data
         persistentVolumeClaim:
           claimName: pv-claim-elastic-data
      containers:
        - name: elasticsearch
          image: registry.cn-zhangjiakou.aliyuncs.com/huazhu_platform/elasticsearch:7.4.2
          #image: registry.cn-zhangjiakou.aliyuncs.com/huazhu_alpha/elasticsearch:7.4.2-1-3
          resources:
            requests:
              memory: 1Gi
              cpu: 1.0
            limits:
              memory: 2Gi
              cpu: 2.0
          command: ["bash", "-c", "ulimit -l unlimited && sysctl -w vm.max_map_count=262144 && chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data && exec su elasticsearch docker-entrypoint.sh"]
          ports:
            - containerPort: 9200
              name: http
            - containerPort: 9300
              name: transport
          env:
            - name: discovery.zen.minimum_master_nodes
              value: "2"
            - name: cluster.initial_master_nodes
              value: "elasticsearch-data-0,elasticsearch-data-1,elasticsearch-data-2"
            - name: discovery.seed_hosts
              value: "elasticsearch-master.ns-elastic.svc.cluster.local"
            - name: ES_JAVA_OPTS
              value: -Xms512m -Xmx512m

            - name: node.master
              value: "false"
            - name: node.ingest
              #value: "true"
              value: "false"
            - name: node.data
              value: "true"
            - name: http.cors.enabled
              value: "true"
            - name: http.cors.allow-origin
              value: "*"

            - name: cluster.name
              value: "elasticsearch-cluster-v7"
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          volumeMounts:
           - mountPath: /usr/share/elasticsearch/data
             name: pv-storage-elastic-data

          # Gave permission to init container
          securityContext:
            privileged: true

      # Pull image from private repo
      imagePullSecrets:
      - name: regcred-elastic
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  namespace: ns-elastic
  name: elasticsearch-data
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: elasticsearch
      role: data

---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: ns-elastic
  name: elasticsearch-data-config
  labels:
    app: elasticsearch
    role: data
data:
  elasticsearch.yml: |-
    cluster.name: "elasticsearch-cluster-v7"
    node.name: "elasticsearch-data"
    discovery.seed_hosts: "elasticsearch-master.ns-elastic.svc.cluster.local"
    cluster.initial_master_nodes: "elasticsearch-data-0,elasticsearch-data-1,elasticsearch-data-2"
    
    network.host: 0.0.0.0
    path.repo: ["/mnt/k8s-data"]
    node.max_local_storage_nodes: 3
    node:
      master: false
      data: true
      ingest: false
    xpack.security.enabled: true
    xpack.monitoring.collection.enabled: true
---
